{"version":3,"file":"SignUpPage-CfeZ9MYv.js","sources":["../../src/components/SignUpForm/SignUpForm.jsx","../../src/pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport Logo from '../shared/Logo/Logo';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading } from '../../redux/users/selectors';\nimport { signUp } from '../../redux/users/operations';\nimport { Navigate, NavLink } from 'react-router-dom';\nimport { registerUserSchema } from '../../validation/auth';\nimport { useId } from 'react';\nimport Label from '../shared/Label/Label';\nimport Input from '../shared/Input/Input';\nimport Button from '../shared/Button/Button';\nimport ErrorMessage from '../shared/errorMessage/ErrorMessage';\nimport Loader from '../shared/Loader/Loader';\nimport css from './SignUpForm.module.css';\nimport clsx from 'clsx';\nimport Icon from '../shared/Icon/Icon';\nimport { useToggle } from '../../hooks/useToggle';\n\nconst SignUpForm = () => {\n  const { t } = useTranslation();\n  const emailId = useId();\n  const passwordId = useId();\n  const repeatPasswordId = useId();\n  const { isOpen: showPassword, toggle: togglePassword } = useToggle();\n  const { isOpen: showRepeatPassword, toggle: toggleRepeatPassword } =\n    useToggle();\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(registerUserSchema),\n    mode: 'onChange',\n    defaultValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n    },\n  });\n\n  const onSubmit = data => {\n    const { repeatPassword, ...rest } = data;\n    dispatch(signUp(rest));\n    reset();\n    /*  Navigate('/signin'); */\n  };\n  return (\n    <div className={css.container}>\n      <Logo className={css.logo} />\n\n      <div className={css.flexContainer}>\n        <div className={css.formContainer}>\n          <h1 className={css.title}>{t('signupForm.signup')}</h1>\n          <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n            <Label htmlFor={emailId}>{t('signupForm.email')}</Label>\n            <Input\n              className={clsx(css.input, errors.email && css.error)}\n              type=\"email\"\n              id={emailId}\n              {...register('email')}\n              placeholder={t('signupForm.placeholderEmail')}\n              autoComplete=\"on\"\n            />\n            {errors.email && (\n              <ErrorMessage>{errors.email.message}</ErrorMessage>\n            )}\n\n            <Label htmlFor={passwordId}>{t('signupForm.password')}</Label>\n            <div className={css.showPassword}>\n              <Input\n                className={clsx(css.input, errors.password && css.error)}\n                type={showPassword ? 'text' : 'password'}\n                id={passwordId}\n                {...register('password')}\n                placeholder={t('signupForm.placeholderPassword')}\n                autoComplete=\"off\"\n              />\n              <span\n                title={\n                  showPassword\n                    ? 'click to hide password'\n                    : 'click to show password'\n                }\n                aria-label={\n                  showPassword\n                    ? 'click to hide password'\n                    : 'click to show password'\n                }\n              >\n                <Icon\n                  onClick={togglePassword}\n                  className={css.icon}\n                  id={showPassword ? 'icon-eye' : 'icon-eye-off'}\n                />\n              </span>\n            </div>\n            {errors.password && (\n              <ErrorMessage>{errors.password.message}</ErrorMessage>\n            )}\n\n            <Label htmlFor={repeatPasswordId}>{t('signupForm.repeat')}</Label>\n            <div className={css.showPassword}>\n              <Input\n                className={clsx(css.input, errors.repeatPassword && css.error)}\n                type={showRepeatPassword ? 'text' : 'password'}\n                id={repeatPasswordId}\n                {...register('repeatPassword')}\n                placeholder={t('signupForm.placeholderPasswordRepeat')}\n                autoComplete=\"off\"\n              />\n              <span\n                title={\n                  showRepeatPassword\n                    ? 'click to hide password'\n                    : 'click to show password'\n                }\n                aria-label={\n                  showRepeatPassword\n                    ? 'click to hide password'\n                    : 'click to show password'\n                }\n              >\n                <Icon\n                  onClick={toggleRepeatPassword}\n                  className={css.icon}\n                  id={showRepeatPassword ? 'icon-eye' : 'icon-eye-off'}\n                />\n              </span>\n            </div>\n            {errors.repeatPassword && (\n              <ErrorMessage>{errors.repeatPassword.message}</ErrorMessage>\n            )}\n            <Button\n              className={css.button}\n              type=\"submit\"\n              onClick={handleSubmit(onSubmit)}\n            >\n              {t('signupForm.signup')}\n              {isLoading && <Loader width={24} height={24} color={'#2f2f2f'} />}\n            </Button>\n          </form>\n          <p className={css.afterDescription}>\n            {t('signupForm.haveAccount')}?{' '}\n            <NavLink className={css.link} to={'/signin'}>\n              {t('signupForm.signin')}\n            </NavLink>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import SignUpForm from '../../components/SignUpForm/SignUpForm';\nimport css from './SignUpPage.module.css';\nimport AdvantagesSection from '../../components/AdvantagesSection/AdvantagesSection';\n\nconst SignUpPage = () => {\n  return (\n    <div className={css.generalSignUpInfo}>\n      <SignUpForm />\n      <div className={css.advantagesSection}>\n        <AdvantagesSection />\n      </div>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["SignUpForm","t","useTranslation","emailId","useId","passwordId","repeatPasswordId","showPassword","togglePassword","useToggle","showRepeatPassword","toggleRepeatPassword","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","register","handleSubmit","errors","reset","useForm","yupResolver","registerUserSchema","onSubmit","data","repeatPassword","rest","signUp","jsxs","css","jsx","Logo","Label","Input","clsx","ErrorMessage","Icon","Button","Loader","NavLink","SignUpPage","AdvantagesSection"],"mappings":"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"}