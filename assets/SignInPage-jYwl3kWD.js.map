{"version":3,"file":"SignInPage-jYwl3kWD.js","sources":["../../src/components/SignInForm/SignInForm.jsx","../../src/pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import css from './SignInForm.module.css';\nimport Logo from '../shared/Logo/Logo';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { signIn } from '../../redux/users/operations';\nimport clsx from 'clsx';\nimport { useId } from 'react';\nimport { LoginUserSchema } from '../../validation/auth';\nimport Label from '../shared/Label/Label';\nimport Input from '../shared/Input/Input';\nimport Icon from '../shared/Icon/Icon';\nimport ErrorMessage from '../shared/errorMessage/ErrorMessage';\nimport { useToggle } from '../../hooks/useToggle';\nimport Button from '../shared/Button/Button';\nimport Loader from '../shared/Loader/Loader';\nimport { selectIsLoading } from '../../redux/users/selectors';\nimport { useTranslation } from 'react-i18next';\n\nconst SignInForm = () => {\n  const { t } = useTranslation();\n\n  const emailId = useId();\n  const passwordId = useId();\n  const { isOpen: showPassword, toggle: togglePassword } = useToggle();\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(LoginUserSchema),\n    mode: 'onBlur',\n    reValidateMode: 'onSubmit',\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const onSubmit = data => {\n    dispatch(signIn(data));\n    reset();\n  };\n\n  return (\n    <div className={css.container}>\n      <Logo className={css.logo} />\n      <div className={css.flexContainer}>\n        <div className={css.formContainer}>\n          <h1 className={css.title}>{t('signinForm.signin')}</h1>\n          <form className={css.form} onSubmit={handleSubmit(onSubmit)}>\n            <Label htmlFor={emailId}>{t('signinForm.email')}</Label>\n            <Input\n              className={clsx(css.input, errors.email && css.error)}\n              type=\"email\"\n              id={emailId}\n              {...register('email')}\n              placeholder={t('signinForm.placeholderEmail')}\n              autoComplete=\"on\"\n            />\n            {errors.email && (\n              <ErrorMessage>{errors.email.message}</ErrorMessage>\n            )}\n            <Label htmlFor={passwordId}>{t('signinForm.password')}</Label>\n            <div className={css.showPassword}>\n              <Input\n                className={clsx(css.input, errors.password && css.error)}\n                type={showPassword ? 'text' : 'password'}\n                id={passwordId}\n                {...register('password')}\n                placeholder={t('signinForm.placeholderPassword')}\n                autoComplete=\"off\"\n              />\n              <span\n                title={\n                  showPassword\n                    ? 'click to hide password'\n                    : 'click to show password'\n                }\n                aria-label={\n                  showPassword\n                    ? 'click to hide password'\n                    : 'click to show password'\n                }\n              >\n                <Icon\n                  onClick={togglePassword}\n                  className={css.icon}\n                  id={showPassword ? 'icon-eye' : 'icon-eye-off'}\n                />\n              </span>\n            </div>\n            {errors.password && (\n              <ErrorMessage>{errors.password.message}</ErrorMessage>\n            )}\n            <Button\n              className={css.button}\n              type=\"submit\"\n              onClick={handleSubmit(onSubmit)}\n            >\n              {t('signinForm.signin')}\n              {isLoading && <Loader width={24} height={24} color={'#2f2f2f'} />}\n            </Button>\n          </form>\n          <p className={css.afterDescription}>\n          {t('signinForm.dontAccount')}?\n            <NavLink className={css.link} to={'/signup'}>\n              {' '}\n              {t('signinForm.signup')}\n            </NavLink>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignInForm;\n","import SignInForm from '../../components/SignInForm/SignInForm';\nimport css from './SignInPage.module.css';\nimport AdvantagesSection from '../../components/AdvantagesSection/AdvantagesSection';\n\nconst SignInPage = () => {\n  return (\n    <div className={css.generalSignInInfo}>\n      <SignInForm />\n      <div className={css.advantagesSection}>\n        <AdvantagesSection />\n      </div>\n    </div>\n  );\n};\n\nexport default SignInPage;\n"],"names":["SignInForm","t","useTranslation","emailId","useId","passwordId","showPassword","togglePassword","useToggle","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","register","handleSubmit","errors","reset","useForm","yupResolver","LoginUserSchema","onSubmit","data","signIn","jsxs","css","jsx","Logo","Label","Input","clsx","ErrorMessage","Icon","Button","Loader","NavLink","SignInPage","AdvantagesSection"],"mappings":"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"}